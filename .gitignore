# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws

# IntelliJ
.idea/

# VSCode
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Quantum Computing Specific
# IBM Quantum credentials
qiskit-ibm-token
.qiskit/
ibm-credentials
quantum_credentials.json

# Quantum circuit cache
*.qasm
*.qpy
circuit_cache/
quantum_cache/

# Quantum simulation results
simulation_results/
quantum_results/
*.hdf5
*.h5

# Machine Learning Specific
# Model checkpoints
checkpoints/
models/
*.pth
*.pt
*.ckpt
*.pkl
*.joblib

# Training logs
logs/
tensorboard_logs/
wandb/
mlruns/

# Data files
data/
datasets/
*.csv
*.json
*.parquet
*.feather

# Jupyter notebook outputs
*.ipynb

# Research and Documentation
# LaTeX
*.aux
*.bbl
*.blg
*.fdb_latexmk
*.fls
*.log
*.out
*.synctex.gz
*.toc

# Papers and drafts
papers/
drafts/
manuscripts/

# Experimental results
experiments/
results/
benchmarks/
performance_data/

# Configuration files with secrets
config.yaml
config.json
secrets.yaml
secrets.json
.env.local
.env.production

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Cloud provider credentials
.aws/
.gcp/
.azure/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Backup files
*.bak
*.backup
*~

# IDE and editor files
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.vscode/extensions.json

# Project specific
# QMANN specific temporary files
qmann_temp/
quantum_temp/
hybrid_temp/

# Performance profiling
*.prof
*.profile
profiling_results/

# Memory dumps
*.dump
*.dmp

# Core dumps
core.*

# Application logs
app.log
error.log
debug.log
quantum.log
training.log

# Test artifacts
test_results/
test_outputs/
test_data/

# Documentation build
docs/build/
docs/_build/
site/

# Package build artifacts
build/
dist/
*.egg-info/

# Virtual environments
venv*/
env*/
.conda/

# Local development
local/
dev/
development/

# Miscellaneous
*.orig
*.rej
.DS_Store
._.DS_Store
**/.DS_Store
**/._.DS_Store
