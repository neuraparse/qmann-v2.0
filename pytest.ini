[pytest]
# Pytest configuration for QMANN v2.0

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    -ra
    --color=yes

# Markers for test categorization
markers =
    benchmark: Performance benchmark tests
    integration: Integration tests
    hardware: Hardware-specific tests
    slow: Slow running tests
    simulator: Quantum simulator tests
    error_mitigation: Error mitigation tests
    memory_scaling: Memory scaling tests
    training: Training convergence tests
    energy: Energy efficiency tests
    ablation: Ablation study tests
    continual: Continual learning tests
    applications: Industry application tests
    unit: Unit tests
    regression: Regression tests
    scalability: Scalability and limits tests
    production: Production data robustness tests

# Test paths
testpaths = tests

# Timeout for tests (in seconds)
timeout = 300

# Minimum Python version
minversion = 7.0

# Coverage options
[coverage:run]
source = src/qmann
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

